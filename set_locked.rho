new basket,
  entryCh,
  returnCh,
  lookup(`rho:registry:lookup`),
  stdout(`rho:io:stdout`)
in {

  lookup!(`rho:id:REGISTRY_URI`, *entryCh) |

  for(entry <- entryCh) {
    entry!(
      {
        "type": "SET_LOCKED",
        // signature of the payload + contract nonce in it, with the private key of the owner (generateSignatureForNonce.js)
        "signature": "SIGNATURE",
        "payload": {
          // new nonce, must be different and random (generateNonce.js)
          "newNonce": "NEW_NONCE",
        }
      },
      *returnCh
    )
  } |

  for (resp <- returnCh) {
    match *resp {
      String => { stdout!(*resp) }
      true => { stdout!("success, tokens locked") }
    }
  } |

  basket!({ "status": "completed" })

}
